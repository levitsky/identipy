# Default configuration file for IdentiPy search enfine.
# It will be used for everything that is missing in your custom config file.
# Interpolation of values and line continuation are not supported.

# Caution: comments on empty lines must start at the beginning of the line.

[search]
precursor accuracy unit: ppm ; can be ppm or Th or Da
# (the latter two mean the same, Th is correct)
precursor accuracy left: 100
precursor accuracy right: 100
# any of the above two can be negative if you want to account for
# systematic error
product accuracy: 0.1 ; mass accuracy of fragments
product accuracy unit: Da ; can be ppm or Da
product minimum m/z: 100
peptide maximum length: 60
peptide minimum length: 6
peptide maximum mass: 6000
peptide minimum mass: 250
enzyme: trypsin ; can be a name of enzyme from pyteomics.parser.expasy_rules or
# can be written in X!Tandem enzyme style. Examples: 
# [RK]|{P} means cleave after R and K, but not before P
# [X]|[D] means cleave before D
# [RK]|{P},[M]|[X] means mix of trypsin and cnbr 
number of missed cleavages: 1
semitryptic: 0
maximum charge: 9
minimum charge: 1
maximum unknown charge: 0
minimum unknown charge: 0
precursor isotope mass error: 0 ; When the value for this parameter is not 0, 
;the parent ion mass tolerance is expanded by opening up multiple tolerance windows centered on the given number of 13C isotope peaks for a peptide.
shifts: 0 ; example: 0, 16.000, 23.000, 12
snp: 0 ; 1 means make SNP (point mutations) check for ALL peptides
# use only for small protein databases because search time increases significantly 

[modifications]
# Examples: camC, oxM, acetyl-, -anyctermmodification
# Must be written in lowercase
fixed: camC
variable:
maximum variable mods: 2
protein nterm cleavage: 1.007825
protein cterm cleavage: 17.002735
p = 79.966331
ox = 15.994915
cam = 57.021464

[output]
format: pepXML ; can be pepxml or tsv
# separator can be specified for csv/tsv format. Default is comma for csv and tab for tsv
separator:
tags: ; in case of label-based quantitation Identipy can write tags intensities in the output pepXML file. 
# Can be tmt10plex, tmt6plex or custom format label1:mass1,label2:mass2...
# Example for custom tmt6plex - tmt_126:126.12773,tmt_127N:127.12476...

#path:
candidates: 1 ; 0 means all sequence candidates
score threshold: 0
minimum matched: 4 ; minimum matched ions for reporting identification
# higher value reduces analysis time
show empty: no
precursor accuracy unit: ; can be ppm or Th or Da
# (the latter two mean the same, Th is correct)

[input]
database:
add decoy: no
# enable if your DB does not have decoy sequences
# but you want to add them to the search
decoy method: reverse ; one of 'reverse' or 'shuffle'
decoy prefix: DECOY_ ; prefix for decoy protein description
# if the decoy label is somewhere in the middle of the protein header, use this:
decoy infix:
deisotoping mass tolerance: 0.3
deisotope: yes

[scoring]
score: identipy.scoring.RNHS
# this can be 'identipy.scoring.RNHS', 'identipy.scoring.hyperscore',
# 'identipy.scoring.morpheusscore' or a dot-delimited
# name of a third-party function. It will be given a spectrum,
# a sequence of a candidate and config.
# score is supposed to be higher for better matches
condition:
# condition can be a path to a function (or a function object added dynamically
# within your Python program) that wil be called and given the same arguments
# as the score function. If this function returns a falsy value, the candidate
# is discarded.
minimum peaks: 4 ; minimum number of peaks in fragmentation spectrum
maximum peaks: 50 ; Getting only N peaks with max intensity from the fragmentation spectrum
# set to 0 to disable
dynamic range: 100  ; affected by 'spectrum processor'
# disregard all peaks that are less than
# 1/x of the highest in the spectrum, where X is this value
# 0 means no filtering
e-values for candidates: 1
maximum fragment charge: 1

[optimization]
increase precursor mass tolerance: yes

[performance]
processes: 0 ; 0 means auto
out queue size: 40000
pre-calculation: some
folder:
# where to store/look for precalculated files

[misc]
first stage:
# use identipy.extras.optimization for auto-tune
# if you want custom refinement, put your function name here
# the function will be given the search results and expected
# to return new settings for a second search.
# The same technique is used for searching with variable mods.

hash: md5
# used for hashing of the database contents

